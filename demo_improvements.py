#!/usr/bin/env python3
"""
Demonstration of the anti-spam improvements
Shows the before/after prompt structure and expected behavior
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'bot'))

def show_old_vs_new_prompt():
    """Compare the old and new prompt structures"""
    
    print("=" * 80)
    print("ANTI-SPAM PROMPT IMPROVEMENTS DEMONSTRATION")
    print("=" * 80)
    
    # Sample problematic message from the issue
    message = "–ò—â—É –º—É–∂–∞ –Ω–∞ —á–∞—Å, –Ω–µ —Å–ª–æ–∂–Ω–∞—è –ø–æ–º–æ—â—å –ø–æ –¥–æ–º—É"
    instructions = """1. **–ë—ã—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –∏ —Ä–∞–∑–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ ("–º—É–∂ –Ω–∞ —á–∞—Å"):** –õ—é–±—ã–µ –ø—Ä–æ—Å—å–±—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Å—Ç–æ–π —Ä–∞–±–æ—Ç—ã –∑–∞ –¥–µ–Ω—å–≥–∏, —á–∞—Å—Ç–æ —Å –ª–∏—á–Ω—ã–º –ø–æ–¥—Ç–µ–∫—Å—Ç–æ–º."""
    
    print(f"\nSample spam message: '{message}'")
    print(f"Instructions: {instructions[:100]}...")
    
    print("\n" + "=" * 40)
    print("OLD PROMPT STRUCTURE (WEAK):")
    print("=" * 40)
    
    old_system = f"–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ø–∞–º–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? –í–∞–∂–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ —Å–ø–∞–º-—Å–æ–æ–±—â–µ–Ω–∏–π: {instructions}"
    old_user = f"{message}"
    
    print("SYSTEM:")
    print(f"'{old_system}'")
    print("\nUSER:")
    print(f"'{old_user}'")
    
    print("\n" + "=" * 40)
    print("NEW PROMPT STRUCTURE (IMPROVED):")
    print("=" * 40)
    
    new_system = f"""–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—é —Å–ø–∞–º–∞ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Ç–æ—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø–∞–º–æ–º.

–í–ê–ñ–ù–û: –¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–≥–∏–º –∏ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ —Å–ø–∞–º –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–µ—Ä–∏—è–º –Ω–∏–∂–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –∫–∞–∂—É—Ç—Å—è "–±–µ–∑–æ–±–∏–¥–Ω—ã–º–∏" –ø—Ä–æ—Å—å–±–∞–º–∏ –æ –ø–æ–º–æ—â–∏.

–ö–†–ò–¢–ï–†–ò–ò –°–ü–ê–ú–ê:
{instructions}

–ü–û–ú–ù–ò: 
- –õ—é–±—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∑–∞ –¥–µ–Ω—å–≥–∏ = –°–ü–ê–ú
- –ü—Ä–æ—Å—å–±—ã –æ –ø–æ–º–æ—â–∏ —Å –æ–ø–ª–∞—Ç–æ–π = –°–ü–ê–ú  
- –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∫ –ª–∏—á–Ω–æ–º—É –æ–±—â–µ–Ω–∏—é = –°–ü–ê–ú
- –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á/–ø—Ä–æ–≥—É–ª–æ–∫ = –°–ü–ê–ú
- –ü—Ä–∏–∑—ã–≤—ã –ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–∫—É = –°–ü–ê–ú

–û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ: {{"result": true}} –µ—Å–ª–∏ —ç—Ç–æ —Å–ø–∞–º, {{"result": false}} –µ—Å–ª–∏ –Ω–µ —Å–ø–∞–º."""

    new_user = f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ —Å–ø–∞–º–æ–º:\n\n\"{message}\""
    
    print("SYSTEM:")
    print(f"'{new_system}'")
    print("\nUSER:")
    print(f"'{new_user}'")
    
    print("\n" + "=" * 40)
    print("KEY IMPROVEMENTS:")
    print("=" * 40)
    print("1. ‚úì Expert role establishment ('—ç–∫—Å–ø–µ—Ä—Ç –ø–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—é —Å–ø–∞–º–∞')")
    print("2. ‚úì Explicit strictness instruction ('–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–≥–∏–º')")  
    print("3. ‚úì Clear warning about 'harmless' requests being spam")
    print("4. ‚úì Bullet-point reminders of key spam indicators")
    print("5. ‚úì Structured analytical user message")
    print("6. ‚úì Emphasized JSON response format")
    print("7. ‚úì Much more directive and specific language")

def show_false_negative_examples():
    """Show the specific false negative examples that should now be caught"""
    
    print("\n" + "=" * 40)
    print("FALSE NEGATIVE EXAMPLES TO CATCH:")
    print("=" * 40)
    
    examples = [
        "–ü—Ä–∏–≤–µ—Ç, –∫—Ç–æ —Å–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –∑–∞–∫–æ–Ω—á–∏—Ç—å —Ä–µ–º–æ–Ω—Ç? –£–∂–µ –Ω–µ—Ç —Å–∏–ª —Å–∞–º–æ–π –¥–µ–ª–∞—Ç—å –µ–≥–æ. –ó–∞–ø–ª–∞—á—É 5000",
        "–°—Ä–æ—á–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å —Å–µ–≥–æ–¥–Ω—è –∑–∞–≤—Ç—Ä–∞, 8600 —Ä—É–±–ª–µ–π..",
        "–ü—Ä–∏–≤–µ—Ç–∏–∫ ) –£ –∫–æ–≥–æ –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å, –∏–ª–∏ –≤—ã–π—Ç–∏ –ø—Ä–æ–π—Ç–∏—Å—å –ø–∏—à–∏—Ç–µ", 
        "—Ç—Ä–µ–±—É—é—Ç—Å—è 2 —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ –≤—ã–≥—Ä—É–∑–∫—É –∫–æ—Ä–æ–±–æ–∫ –∏–∑ –º–∞—à–∏–Ω—ã, –¥–≤–∞ —á–∞—Å–∞ —Ä–∞–±–æ—Ç—ã, –∑–∞–ø–ª–∞—á—É –∫–∞–∂–¥–æ–º—É –ø–æ 3000—Ä",
        "–ò—â—É –º—É–∂–∞ –Ω–∞ —á–∞—Å, –Ω–µ —Å–ª–æ–∂–Ω–∞—è –ø–æ–º–æ—â—å –ø–æ –¥–æ–º—É"
    ]
    
    for i, example in enumerate(examples, 1):
        print(f"{i}. '{example}'")
        
        # Classify each example
        if "–∑–∞–ø–ª–∞—á—É" in example.lower() or "—Ä—É–±–ª–µ–π" in example.lower() or "3000—Ä" in example:
            spam_type = "üí∞ Payment for work/services"
        elif "–ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å" in example.lower() or "–ø—Ä–æ–π—Ç–∏—Å—å" in example.lower():
            spam_type = "üí¨ Inappropriate socializing"
        elif "–º—É–∂ –Ω–∞ —á–∞—Å" in example.lower():
            spam_type = "üîß 'Husband for an hour' services"
        else:
            spam_type = "üö© General spam indicators"
            
        print(f"   ‚Üí Expected: SPAM ({spam_type})")
        print()

if __name__ == "__main__":
    show_old_vs_new_prompt()
    show_false_negative_examples()
    
    print("\n" + "=" * 80)
    print("EXPECTED IMPACT:")
    print("=" * 80)
    print("The improved prompt structure should significantly reduce false negatives by:")
    print("‚Ä¢ Being more authoritative and directive")
    print("‚Ä¢ Providing explicit examples of what constitutes spam")  
    print("‚Ä¢ Warning against classifying obvious spam as 'harmless requests'")
    print("‚Ä¢ Using clear, structured instructions")
    print("‚Ä¢ Emphasizing strict classification standards")
    print("\nNext step: Test with actual OpenAI API to validate improvements")